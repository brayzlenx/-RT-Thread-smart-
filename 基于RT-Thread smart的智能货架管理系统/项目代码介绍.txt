图像识别与LED控制模块
	初始化：
		加载部署配置文件获取模型路径、类别标签等参数
		初始化KPU并加载kmodel模型
		配置AI2D图像预处理模块
		初始化摄像头传感器，设置分辨率、像素格式
		绑定摄像头输出到显示层
		创建OSD图像用于屏幕信息显示
	功能实现：
		循环捕获摄像头图像
		使用AI2D进行图像预处理（缩放/格式转换）
		通过KPU执行模型推理
		对输出结果进行后处理（softmax/sigmoid）
		根据分类结果控制LED状态：
		class1：LED1亮，LED2灭
		class2：LED1灭，LED2亮
		未识别：双LED灭
		在LCD屏幕显示分类结果、置信度和LED状态

矩阵按键模块
	初始化：
		配置FPIOA设置矩阵按键引脚功能
		初始化4个行引脚为输入模式（启用下拉电阻）
		初始化4个列引脚为输出模式
		定义4×4键盘映射表
	功能实现：
		按列扫描按键矩阵：
		依次激活每列引脚
		检测行引脚电平变化
		实现按键防抖算法：
		记录按键时间戳
		50ms防抖间隔
		返回按下的按键名称（"1"-"16"）
		根据当前识别状态执行对应操作：
		class1状态：按键1-5增加A值，按键6清零A值
		class2状态：按键1-5增加B值，按键6清零B值

OLED显示模块
	初始化：
		配置I2C通信（软件模式：SCL=44，SDA=45）
		发送SSD1306初始化命令序列
		创建8×8点阵字模库（数字、字母、符号）
		实现清屏函数
	功能实现：
		文本显示函数：
		设置页地址和列地址
		从字模库获取字符点阵数据
		通过I2C发送显示数据
		数值更新显示：
		清空屏幕
		第一行显示"A : [值]"
		第二行显示"B : [值]"
		支持动态刷新A/B值

主系统集成
	初始化流程：
		初始化OLED并显示"A : 0"和"B : 0"
		初始化LED为关闭状态
		加载图像识别模型和配置
		启动摄像头
		初始化按键矩阵
	主循环流程：
		检测按键并处理数值更新
		捕获图像并进行分类识别
		根据分类结果控制LED
		刷新OLED显示最新A/B值
		在LCD屏幕显示系统状态信息
		内存管理和资源回收
	异常处理：
		捕获键盘中断(Ctrl+C)安全退出
		捕获运行时异常并输出错误信息
		程序退出时释放所有硬件资源：
		关闭摄像头
		释放显示资源
		关闭LED
		清空OLED